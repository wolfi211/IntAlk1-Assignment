@model PagedList<IntAlk1_Assignment.Models.PropertyModel>

<h2 class="text-center mt-2">List of Properties</h2>
@if (ViewBag.Success != null)
{
    <div class="row d-flex justify-content-center">
        <div class="col-3 alert alert-dismissible alert-success">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @Html.Raw(ViewBag.Success)
        </div>
    </div>
}
@if (ViewBag.Failed != null)
{
    <div class="row d-flex justify-content-center">
        <div class="col-3 alert alert-dismissible alert-danger">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @Html.Raw(ViewBag.Failed)
        </div>
    </div>
}
<form asp-action="PropertyList">
    <div class="row mx-auto mb-2" style="width:93%;">
        <div class="col-3 d-grid">
            <a asp-action="CreatePropertyForm" class="btn btn-primary">Create New</a>
        </div>
        <div class="col form-group d-grid">
            <input name="searchTerm" value=@(ViewBag.CurrentFilter as string) class="form-control" />
        </div>
        <div class="col-3 form-group d-grid">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>
</form>
<table class="table mx-auto">
    <thead>
        <tr>
            <th>
                <Strong>Address</Strong>
            </th>
            <th>
                <Strong>Owner</Strong>
            </th>
            <th>
                <Strong>Tenant</Strong>
            </th>
            <th>
                <Strong>Rent/Month</Strong>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@for (var i = 0; i < Model.Count; i++) {
    <tr class="@(i % 2 == 0 ? "table-secondary" : "table-primary")">
        <td>
            @Html.DisplayFor(modelItem => Model[i].Address)
        </td>
        <td>
            @(Model[i].Owner != null ? Html.DisplayFor(modelItem => Model[i].Owner.Name) : "Has No Owner")
        </td>
        <td>
            @(Model[i].Tenant != null ? Html.DisplayFor(modelItem => Model[i].Tenant.Name) : "Has No Tenant")
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model[i].Rent)
        </td>
        <td>
            @Html.ActionLink("Edit", "EditPropertyForm", new { id=Model[i].Id }) |
            @Html.ActionLink("Delete", "DeleteProperty", new { id=Model[i].Id })
        </td>
    </tr>
}
    </tbody>
</table>

<div class="row d-flex justify-content-center">
    <div class="col-4 btn btn-primary @(Model.HasPreviousPage ? "" : "disabled")">
        <a class="page-link" href="/registry/PropertyList?page=@(Model.PageNumber - 1)&currentFilter=@ViewBag.CurrentFilter">&laquo;</a>
    </div>

    <div class="col-4 btn btn-primary @(Model.HasNextPage ? "" : "disabled")">
        <a class="page-link" href="/registry/PropertyList?page=@(Model.PageNumber + 1)&currentFilter=@ViewBag.CurrentFilter">&raquo;</a>
    </div>
</div>

